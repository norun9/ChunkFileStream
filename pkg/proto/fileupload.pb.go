// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: fileupload.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SingleUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket    string     `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Filename  string     `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` // Filename for the upload
	Data      []byte     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`         // File data, up to 5MB
	AwsConfig *AWSConfig `protobuf:"bytes,4,opt,name=aws_config,json=awsConfig,proto3" json:"aws_config,omitempty"`
}

func (x *SingleUploadRequest) Reset() {
	*x = SingleUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileupload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleUploadRequest) ProtoMessage() {}

func (x *SingleUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileupload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleUploadRequest.ProtoReflect.Descriptor instead.
func (*SingleUploadRequest) Descriptor() ([]byte, []int) {
	return file_fileupload_proto_rawDescGZIP(), []int{0}
}

func (x *SingleUploadRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *SingleUploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SingleUploadRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SingleUploadRequest) GetAwsConfig() *AWSConfig {
	if x != nil {
		return x.AwsConfig
	}
	return nil
}

type SingleUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Message describing the result
}

func (x *SingleUploadResponse) Reset() {
	*x = SingleUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileupload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleUploadResponse) ProtoMessage() {}

func (x *SingleUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileupload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleUploadResponse.ProtoReflect.Descriptor instead.
func (*SingleUploadResponse) Descriptor() ([]byte, []int) {
	return file_fileupload_proto_rawDescGZIP(), []int{1}
}

func (x *SingleUploadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MultipleUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket      string     `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Filename    string     `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                           // Filename being uploaded
	ChunkData   []byte     `protobuf:"bytes,3,opt,name=chunk_data,json=chunkData,proto3" json:"chunk_data,omitempty"`        // Date of file chunk
	ChunkNumber int32      `protobuf:"varint,4,opt,name=chunk_number,json=chunkNumber,proto3" json:"chunk_number,omitempty"` // Chunk number (indicate order)
	AwsConfig   *AWSConfig `protobuf:"bytes,5,opt,name=aws_config,json=awsConfig,proto3" json:"aws_config,omitempty"`
}

func (x *MultipleUploadRequest) Reset() {
	*x = MultipleUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileupload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleUploadRequest) ProtoMessage() {}

func (x *MultipleUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileupload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleUploadRequest.ProtoReflect.Descriptor instead.
func (*MultipleUploadRequest) Descriptor() ([]byte, []int) {
	return file_fileupload_proto_rawDescGZIP(), []int{2}
}

func (x *MultipleUploadRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *MultipleUploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MultipleUploadRequest) GetChunkData() []byte {
	if x != nil {
		return x.ChunkData
	}
	return nil
}

func (x *MultipleUploadRequest) GetChunkNumber() int32 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

func (x *MultipleUploadRequest) GetAwsConfig() *AWSConfig {
	if x != nil {
		return x.AwsConfig
	}
	return nil
}

type MultipleUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkNumber int32   `protobuf:"varint,1,opt,name=chunk_number,json=chunkNumber,proto3" json:"chunk_number,omitempty"`
	Message     string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Progress    float32 `protobuf:"fixed32,3,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *MultipleUploadResponse) Reset() {
	*x = MultipleUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileupload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleUploadResponse) ProtoMessage() {}

func (x *MultipleUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileupload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleUploadResponse.ProtoReflect.Descriptor instead.
func (*MultipleUploadResponse) Descriptor() ([]byte, []int) {
	return file_fileupload_proto_rawDescGZIP(), []int{3}
}

func (x *MultipleUploadResponse) GetChunkNumber() int32 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

func (x *MultipleUploadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MultipleUploadResponse) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type AWSConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile string `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	Region  string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *AWSConfig) Reset() {
	*x = AWSConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileupload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AWSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSConfig) ProtoMessage() {}

func (x *AWSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_fileupload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSConfig.ProtoReflect.Descriptor instead.
func (*AWSConfig) Descriptor() ([]byte, []int) {
	return file_fileupload_proto_rawDescGZIP(), []int{4}
}

func (x *AWSConfig) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *AWSConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

var File_fileupload_proto protoreflect.FileDescriptor

var file_fileupload_proto_rawDesc = []byte{
	0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x93,
	0x01, 0x0a, 0x13, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34,
	0x0a, 0x0a, 0x61, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x41, 0x57, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x61, 0x77, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x30, 0x0a, 0x14, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x15, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x77, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x41, 0x57, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x09, 0x61, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x71, 0x0a, 0x16,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x3d, 0x0a, 0x09, 0x41, 0x57, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x32, 0xc3,
	0x01, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1f, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x30, 0x01, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_fileupload_proto_rawDescOnce sync.Once
	file_fileupload_proto_rawDescData = file_fileupload_proto_rawDesc
)

func file_fileupload_proto_rawDescGZIP() []byte {
	file_fileupload_proto_rawDescOnce.Do(func() {
		file_fileupload_proto_rawDescData = protoimpl.X.CompressGZIP(file_fileupload_proto_rawDescData)
	})
	return file_fileupload_proto_rawDescData
}

var file_fileupload_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_fileupload_proto_goTypes = []any{
	(*SingleUploadRequest)(nil),    // 0: fileupload.SingleUploadRequest
	(*SingleUploadResponse)(nil),   // 1: fileupload.SingleUploadResponse
	(*MultipleUploadRequest)(nil),  // 2: fileupload.MultipleUploadRequest
	(*MultipleUploadResponse)(nil), // 3: fileupload.MultipleUploadResponse
	(*AWSConfig)(nil),              // 4: fileupload.AWSConfig
}
var file_fileupload_proto_depIdxs = []int32{
	4, // 0: fileupload.SingleUploadRequest.aws_config:type_name -> fileupload.AWSConfig
	4, // 1: fileupload.MultipleUploadRequest.aws_config:type_name -> fileupload.AWSConfig
	0, // 2: fileupload.FileUploadService.SingleUpload:input_type -> fileupload.SingleUploadRequest
	2, // 3: fileupload.FileUploadService.MultipleUpload:input_type -> fileupload.MultipleUploadRequest
	1, // 4: fileupload.FileUploadService.SingleUpload:output_type -> fileupload.SingleUploadResponse
	3, // 5: fileupload.FileUploadService.MultipleUpload:output_type -> fileupload.MultipleUploadResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_fileupload_proto_init() }
func file_fileupload_proto_init() {
	if File_fileupload_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fileupload_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SingleUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileupload_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SingleUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileupload_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MultipleUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileupload_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MultipleUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileupload_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AWSConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fileupload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fileupload_proto_goTypes,
		DependencyIndexes: file_fileupload_proto_depIdxs,
		MessageInfos:      file_fileupload_proto_msgTypes,
	}.Build()
	File_fileupload_proto = out.File
	file_fileupload_proto_rawDesc = nil
	file_fileupload_proto_goTypes = nil
	file_fileupload_proto_depIdxs = nil
}
